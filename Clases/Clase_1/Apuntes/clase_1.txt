Apuntes de Computación II: Git y Entrada/Salida en Unix/Linux

1. Control de Versiones con Git

Git: Sistema de control de versiones distribuido que permite a los desarrolladores gestionar el código y colaborar sin conexión.
Ventajas: Trabajo offline, integridad con SHA-1, ramas para colaboración.
Comandos básicos:

Verificar instalación:
  git --version

Instalar Git:
  Linux: sudo apt install git
  MacOS: brew install git
  Windows: Descargar de Git SCM

Configurar usuario:
  git config --global user.name "Tu Nombre"
  git config --global user.email "tucorreo@example.com"

Inicializar repositorio:
  git init

Agregar cambios:
  git add .

Hacer commit:
  git commit -m "Primer commit"

Ver historial:
  git log --oneline

Conexión a repositorios remotos:

Agregar remoto:
  git remote add origin https://github.com/tuusuario/Repositorio.git

Subir cambios:
  git push -u origin main

2. Entrada y Salida en Unix/Linux

Flujos básicos:
  stdin (0): Entrada estándar (teclado o archivo).
  stdout (1): Salida estándar (resultados de comandos).
  stderr (2): Salida de error estándar.

Redirección de Entrada/Salida:

Sobrescribir archivo:
  echo "Hola" > archivo.txt

Agregar contenido a archivo:
  echo "Adición" >> archivo.txt

Leer desde un archivo:
  wc -l < archivo.txt

Redirigir errores:
  comando 2> error.log

Redirigir salida y errores:
  comando &> salida.log

Descartar salida:
  comando 2>/dev/null

Pipes (|):
Permiten encadenar comandos. 
Ejemplo:
  ls -l | grep ".txt"

Archivos especiales:
  /dev/null: Descarta datos.
  /dev/tty: Representa la terminal.

3. Manejo de Argumentos en Python: getopt y argparse

getopt:

Utiliza para argumentos simples y es adecuado para scripts pequeños.
Ejemplo:
  import getopt
  opts, args = getopt.getopt(sys.argv[1:], 'i:o:')
  for opt, arg in opts:
      if opt == '-i':
          archivo_entrada = arg
      elif opt == '-o':
          archivo_salida = arg
  
argparse:

Más flexible y robusto, permite validación, mensajes de ayuda y manejo de tipos complejos.
Ejemplo básico:
  import argparse
  parser = argparse.ArgumentParser(description='Procesa los archivos de entrada y salida.')
  parser.add_argument('-i', '--input', help='Archivo de entrada', required=True)
  parser.add_argument('-o', '--output', help='Archivo de salida', default='salida.txt')
  args = parser.parse_args()
  print(f'Entrada: {args.input}, Salida: {args.output}')

Tipos de datos:
Para enteros: type=int
Para listas: nargs='+' o nargs='*'